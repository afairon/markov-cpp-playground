@startuml Markov Playground

skinparam classFontSize 16
skinparam ClassAttributeFontSize 14

abstract Controller {
    #_listener:http_listener
    +Controller(addr:const string&)
    +~Controller()
    +handleGet(message:http_request):virtual void
    +handlePost(message:http_request):virtual void
    +handlePut(message:http_request):virtual void
    +handleDelete(message:http_request):virtual void
    +handlePatch(message:http_request):virtual void
    +handleHead(message:http_request):virtual void
    +handleOptions(message:http_request):virtual void
    +opHandlers():virtual void
    +relativePath(message:const http_request&):string
    +requestPath(message:const http_request&):vector<string>
    +uri() const:string
    +accept():pplx::task<void>
    +shutdown():pplx::task<void>
}

class MicroserviceController {
    -chain:WordPrediction*
    -responseNotImpl(method:const http::method&):json::value
    +MicroserviceController(addr:const string&)
    +~MicroserviceController()
    +handleGet(message:http_request):void
    +handlePost(message:http_request):void
    +handlePut(message:http_request):void
    +handleDelete(message:http_request):void
    +handlePatch(message:http_request):void
    +handleHead(message:http_request):void
    +handleOptions(message:http_request):void
    +opHandlers():void
}

class InterruptHandler {
    +hookSIGINT():static void
    +HandleInterrupt(signal:int):static void
    +waitInterrupt():static void
}

Controller <|-- MicroserviceController
Controller ..> InterruptHandler

abstract class WordPrediction {
    +WordPrediction()
    +~WordPrediction()
    +Add(seq:const NGram&):virtual void
    +Generate(seq:const NGram&):virtual void
}

Class MarkovChain {
    -Order:uint8_t
    -stateMap:map<string, int>
    -freqMap:map<int, SparseArray> freqMat
    -intMap:map<int, string> intMap
    #addState(str:string):void
    +MarkovChain(ord:uint8_t)
    +~MarkovChain()
    +Add(seq:NGram&):void
    +Generate(current:NGram&):string
    +Read(filepath:const string&):void
}

' Word prediction
WordPrediction <|-- MarkovChain

MicroserviceController o-- WordPrediction

note left of WordPrediction : For maintainbility and compatibility purposes,\nthe developer can implement\nhis/her own word prediction algorithm

@enduml